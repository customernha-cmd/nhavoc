<!DOCTYPE html>
<html>
  <head>
    <base target="_top">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;700&display=swap" rel="stylesheet">
    
    <style>
      :root {
        --primary-color: #4a90e2;
        --background-color: #f4f6f8;
        --form-bg-color: #ffffff;
        --text-color: #333333;
        --border-color: #dddddd;
        --success-color: #28a745;
        --error-color: #dc3545;
        --record-color: #ff4136;
      }
      
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        font-family: 'Kanit', sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding-top: 40px;
        box-sizing: border-box;
      }
      
      .container {
        width: 100%;
        max-width: 600px;
        background-color: var(--form-bg-color);
        padding: 30px 40px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        box-sizing: border-box;
        /* ‚ùó ADDED: Margin for smaller screens */
        margin: 0 15px;
      }
      
      h1 {
        text-align: center;
        color: var(--text-color);
        font-weight: 500;
        margin-top: 0;
        margin-bottom: 25px;
        font-size: 24px; /* Adjusted base font size */
      }
      
      .form-group {
        margin-bottom: 20px;
      }
      
      label {
        display: block;
        margin-bottom: 8px;
        font-weight: 400;
      }
      
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select,
      textarea {
        width: 100%;
        padding: 12px;
        border: 1px solid var(--border-color);
        border-radius: 4px;
        box-sizing: border-box;
        font-family: 'Kanit', sans-serif;
        font-size: 16px;
        transition: border-color 0.3s;
      }

      input:focus, select:focus, textarea:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
      }
      
      textarea {
        resize: vertical;
        min-height: 120px;
      }
      
      button[type="submit"] {
        width: 100%;
        padding: 14px;
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 4px;
        font-family: 'Kanit', sans-serif;
        font-size: 18px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.3s;
      }
      
      button[type="submit"]:hover {
        background-color: #357abd;
      }
      
      button[type="submit"]:disabled {
        background-color: #cccccc;
        cursor: not-allowed;
      }

      .required-mark {
        color: var(--error-color);
        margin-left: 4px;
      }

      .label-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
      }
      .label-container label {
        margin-bottom: 0;
      }
      #micButton {
        background-color: transparent;
        border: 1px solid #ccc;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        cursor: pointer;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 16px;
        transition: all 0.2s ease;
        flex-shrink: 0; /* Prevents button from shrinking */
      }
      #micButton:hover {
        background-color: #f0f0f0;
        border-color: var(--primary-color);
      }
      #micButton.listening {
        background-color: var(--record-color);
        color: white;
        border-color: var(--record-color);
        animation: pulse 1.5s infinite;
      }
      @keyframes pulse {
        0% { box-shadow: 0 0 0 0 rgba(255, 65, 54, 0.7); }
        70% { box-shadow: 0 0 0 10px rgba(255, 65, 54, 0); }
        100% { box-shadow: 0 0 0 0 rgba(255, 65, 54, 0); }
      }

      /* --- ‚ùó ADDED: Responsive Design --- */
      @media (max-width: 600px) {
        body {
          padding-top: 20px; /* ‡∏•‡∏î‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */
        }
        .container {
          padding: 20px; /* ‡∏•‡∏î padding ‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤ */
          margin: 0 10px; /* ‡∏•‡∏î margin ‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤ */
        }
        h1 {
          font-size: 22px; /* ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */
        }
        button[type="submit"] {
          font-size: 16px; /* ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏° */
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• VOC</h1>
      <form id="vocForm">
        
        <div class="form-group">
          <label for="operationType">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô<span class="required-mark">*</span></label>
          <select id="operationType" name="operationType" required>
            <option value="‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ">‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
            <option value="‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢">‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢</option>
            <option value="‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô" selected>‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô</option>
            <option value="‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ">‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
          </select>
        </div>
        
        <div class="form-group">
          <label for="firstName">‡∏ä‡∏∑‡πà‡∏≠<span class="required-mark">*</span></label>
          <input type="text" id="firstName" name="firstName" required>
        </div>
        
        <div class="form-group">
          <label for="lastName">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•<span class="required-mark">*</span></label>
          <input type="text" id="lastName" name="lastName" required>
        </div>
        
        <div class="form-group">
          <label for="email">‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡πå<span class="required-mark">*</span></label>
          <input type="email" id="email" name="email" required>
        </div>
        
        <div class="form-group">
          <label for="phone">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠<span class="required-mark">*</span></label>
          <input type="tel" id="phone" name="phone" required placeholder="‡πÄ‡∏ä‡πà‡∏ô 081-234-5678" maxlength="13">
        </div>
        
        <div class="form-group">
          <div class="label-container">
            <label for="details">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î<span class="required-mark">*</span></label>
            <button type="button" id="micButton" title="‡∏û‡∏π‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°">üé§</button>
          </div>
          <textarea id="details" name="details" required></textarea>
        </div>
        
        <button type="submit" id="submitButton">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
      </form>
    </div>
    
    <script>
      // ‚ùó IMPORTANT: ‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á Web App ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ Deploy ‡πÉ‡∏ô Code.gs ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
      const WEB_APP_URL = 'https://script.google.com/macros/s/AKfycbw38n_qrWF83W7QQsC0saXkmbdkuUSTi6KVESkNqTPUZPHOB2PaoL3r-rtr8CEkNmP0/exec';

      const form = document.getElementById('vocForm');
      const submitButton = document.getElementById('submitButton');
      
      form.addEventListener('submit', event => {
        event.preventDefault();
        
        submitButton.disabled = true;
        submitButton.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...';

        const formData = {
          operationType: form.elements.operationType.value,
          firstName: form.elements.firstName.value,
          lastName: form.elements.lastName.value,
          email: form.elements.email.value,
          phone: form.elements.phone.value,
          details: form.elements.details.value
        };
        
        fetch(WEB_APP_URL, {
          method: 'POST',
          mode: 'no-cors', 
          cache: 'no-cache',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
          body: JSON.stringify(formData)
        })
        .then(response => {
             alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
             form.reset();
        })
        .catch(error => {
            console.error('Fetch Error:', error);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ' + error.message);
        })
        .finally(() => {
            submitButton.disabled = false;
            submitButton.textContent = '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
        });
      });
      

      // --- Speech to Text ---
      const micButton = document.getElementById('micButton');
      const detailsTextarea = document.getElementById('details');
      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
      if (SpeechRecognition) {
        const recognition = new SpeechRecognition();
        recognition.lang = 'th-TH';
        recognition.interimResults = false;
        micButton.addEventListener('click', () => {
          if (micButton.classList.contains('listening')) {
            recognition.stop();
          } else {
            recognition.start();
          }
        });
        recognition.onstart = () => {
          micButton.classList.add('listening');
          micButton.title = '‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á';
        };
        recognition.onend = () => {
          micButton.classList.remove('listening');
          micButton.title = '‡∏û‡∏π‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°';
        };
        recognition.onerror = (event) => {
          console.error('Speech recognition error:', event.error);
          alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏π‡πâ‡∏à‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á: ${event.error}`);
        };
        recognition.onresult = (event) => {
          const transcript = event.results[event.results.length - 1][0].transcript.trim();
          const existingText = detailsTextarea.value.trim();
          detailsTextarea.value = existingText + (existingText.length > 0 ? ' ' : '') + transcript;
        };
      } else {
        console.log('Speech Recognition API not supported in this browser.');
        micButton.style.display = 'none';
      }
    </script>
  </body>
</html>